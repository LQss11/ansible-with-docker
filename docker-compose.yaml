version: '3.8'

networks:
  net:
    driver: bridge

volumes:
  docker-storage:

# Compose extension-field for a images volume reference 
x-services-volume:
  &images-volume
    type: volume
    source: docker-storage
    target: /var/lib/docker/image


services:
  # DooD Container Configuration
  # dood_controller:
  #   hostname: controller
  #   build:
  #     context: ./Dockerfiles/Dood
  #     dockerfile: ${DOOD_DOCKERFILE_NAME}
  #   image: dindood_cluster_controller
  #   restart: always
  #   volumes:
  #     - './src:/src'
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /usr/bin/docker:/usr/bin/docker    
  #   tty: true
  #   networks:
  #     - net   

  # This is a controller as DinD
  # Use this controller to avoid
  # having issues when using swarm mode
  controller:
    build:
      context: ./Dockerfiles/Dind
      dockerfile: ${DIND_DOCKERFILE_NAME}
    image: dindocker_cluster_agent
    restart: always
    volumes:
      - './src:/src'
      - *images-volume  # Persist docker images data inside a docker volume to persist over all agents
    privileged: true    
    working_dir: /src
    tty: true
    networks:
      - net    

  # DinD Container Configuration
  agent:
    build:
      context: ./Dockerfiles/Dind
      dockerfile: ${DIND_DOCKERFILE_NAME}
    restart: always
    volumes:
      - './src:/src'
      - *images-volume  # Persist docker images data inside a docker volume to persist over all agents
    privileged: true    
    tty: true
    networks:
      - net          